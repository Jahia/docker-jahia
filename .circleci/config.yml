---

############################
# Workflow summary :
# Build Jahia images and push them on a private repo for test purpose
# Pull Jahia images and test them automatically
# Ask for human validation before pushing images to the public repo
############################

version: 2.1

orbs:
  docker: circleci/docker@1.0.1
  slack: circleci/slack@3.4.2
  anchore: anchore/anchore-engine@1.8.1

commands:
  build_jahia:
    description: "Build Jahia images and push them on a private repo for test purpose"
    parameters:
      repo:
        type: string
        default: jahia/jahia_test
      jver:
        type: string
      base_url:
        type: string
      xml_suffix:
        type: string
        default: "_v8"
      tag_suffix:
        type: string
        default: ""
      dbms_type:
        type: string
        default: "mariadb"
      debug_tools:
        type: string
        default: "false"
      ffmpeg:
        type: string
        default: "false"
      libreoffice:
        type: string
        default: "false"
      ds_in_db:
        type: string
        default: "true"
      healthcheck_ver:
        type: string
        default: "2.3.1"
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          step-name: "Build << parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >>"
          tag: "<< parameters.jver >><< parameters.tag_suffix >>"
          image: "<< parameters.repo >>"
          dockerfile: Dockerfile
          extra_build_args:
            '
            --build-arg BASE_URL="<< parameters.base_url >>"
            --build-arg DBMS_TYPE="<< parameters.dbms_type >>"
            --build-arg INSTALL_FILE_SUFFIX="<< parameters.xml_suffix >>"
            --build-arg DEBUG_TOOLS="<< parameters.debug_tools >>"
            --build-arg FFMPEG="<< parameters.ffmpeg >>"
            --build-arg LIBREOFFICE="<< parameters.libreoffice >>"
            --build-arg DS_IN_DB="<< parameters.ds_in_db >>"
            --build-arg HEALTHCHECK_VER="<< parameters.healthcheck_ver >>"
            --no-cache
            '
      - docker/push:
          step-name: "Push to test repo << parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >>"
          image: "<< parameters.repo >>"
          tag: "<< parameters.jver >><< parameters.tag_suffix >>"
      - slack/status:
          failure_message: |
            ':alert: Building jahia:<< parameters.jver >><< parameters.tag_suffix >> has failed !'
          success_message: |
            ':building_construction: Building jahia:<< parameters.jver >><< parameters.tag_suffix >> successfully.'
  scan_jahia:
    description: "Pull and scan a docker image"
    parameters:
      repo:
        type: string
        default: jahia/jahia_test
      jver:
        type: string
      tag_suffix:
        type: string
      registry_user:
        type: string
      registry_pass:
        type: string
      slack_channel:
        type: string
      registry_name:
        type: string
        default: "docker.io"
      analyze_timeout:
        type: string
        default: "300"
      policy_failure:
        type: boolean
        default: true
    steps:
      - run:
          command: |
            apk update &&
            apk add bash curl
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - anchore/start_engine
      - anchore/add_private_registry:
          registry_name: "<< parameters.registry_name >>"
          registry_user: "<< parameters.registry_user >>"
          registry_pass: "<< parameters.registry_pass >>"
      - anchore/analyze_image:
          image_name: "<< parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >>"
          timeout: "<< parameters.analyze_timeout >>"
      - anchore/policy_evaluation:
          image_name: "<< parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >>"
          policy_failure: "<< parameters.policy_failure >>"
      - anchore/parse_reports
      - store_artifacts:
          path: anchore-reports
      - slack/status:
          channel: "<< parameters.slack_channel >>"
          failure_message: |
            ':alert: Scan for << parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >> has failed'
          success_message: |
            ':mag: Scanned  << parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >> successfully'

  test_jahia:
    description: "Pull jahia images from private repo and test them"
    parameters:
      jver:
        type: string
      tag_suffix:
        type: string
        default: ""
    steps:
      - run:
          name: import db schema
          command: |
            set +eo pipefail
            cli="mysql -u root -p$MYSQL_ROOT_PASSWORD -h $DB_HOST --protocol=tcp"
            i=0
            il=66
            until ($cli -e "select 1"); do
              ((i++))
              [ $i -gt 66 ] && echo "Oh fuck off man!" && exit 1
              echo "waiting for DB... (iteration $i/$il)"
              sleep 1
            done
            echo "setting max_allowed_packet..."
              mysql -u root -p$MYSQL_ROOT_PASSWORD -h $DB_HOST --protocol=tcp -e "set global max_allowed_packet=134217728;"
            echo "now importing schema..."
            echo  mysql -u $DB_USER -p$DB_PASS -h $DB_HOST --protocol=tcp -D $DB_NAME
            cat /data/digital-factory-data/db/sql/schema/mysql/01-* | \
              mysql -u $DB_USER -p$DB_PASS -h $DB_HOST --protocol=tcp -D $DB_NAME
      - run:
          name: start jahia entrypoint
          background: true
          command: |
            set +o pipefail
            env
            free -m
            /entrypoint.sh
      - run:
          name: healtcheck test and push
          command: |
            set +o pipefail
            for i in {1..666}; do
              echo "iteration $i/666..."
              jsonhealth=$(curl -m 1 http://localhost:8080/healthcheck -s -u root:$SUPER_USER_PASSWORD||exit 0)
              echo $jsonhealth
              if (test "$(echo $jsonhealth | jq -r '.status')" = "GREEN"); then
                exit 0
              fi
              echo "Not ready yet"
              echo
              sleep 1
            done
            echo "you are a failure"
            exit 1
      - slack/status:
          failure_message: |
            ':alert: Testing jahia:<< parameters.jver >><< parameters.tag_suffix >> has failed !'
          success_message: |
            ':heartpulse: Testing jahia:<< parameters.jver >><< parameters.tag_suffix >> successfully.'

  publish_image:
    description: "Push tested image to public repo"
    parameters:
      repo:
        type: string
        default: jahia/jahia
      repo_source:
        type: string
        default: jahia/jahia_test
      jver:
        type: string
      tag_suffix:
        type: string
        default: ""
      latest:
        type: boolean
        default: false
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/pull:
          images: "<< parameters.repo_source >>:<< parameters.jver >><< parameters.tag_suffix >>"
      - run:
          name: "set final name to image"
          command: |
            docker tag \
              << parameters.repo_source >>:<< parameters.jver >><< parameters.tag_suffix >> \
              << parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >>
      - docker/push:
          step-name: "Push to final repo << parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >>"
          image: "<< parameters.repo >>"
          tag: "<< parameters.jver >><< parameters.tag_suffix >>"
      - when:
          condition: << parameters.latest >>
          steps:
            - run:
                name: "set latest tag to image"
                command: |
                  docker tag \
                    << parameters.repo >>:<< parameters.jver >><< parameters.tag_suffix >> \
                    << parameters.repo >>:latest
            - docker/push:
                step-name: "Pushing << parameters.repo >>:latest"
                image: "<< parameters.repo >>"
                tag: "latest"
      - slack/status:
          failure_message: |
            ':alert: Publishing jahia:<< parameters.jver >><< parameters.tag_suffix >> has failed !'
          success_message: |
            ':whale2: Publishing jahia:<< parameters.jver >><< parameters.tag_suffix >> successfully.'

######################## common stuff
suffixend_def_param: &suffixend_def_param
  #############################
  #  /!\ /!\ /!\ /!\ /!\ /!\  #
  #   Set something here if   #
  # you do not want to update #
  #      official images.     #
  # Be aware of latest value! #
  #  /!\ /!\ /!\ /!\ /!\ /!\  #
  #############################
  suffixend:
    type: string
    default: ""
    # example for test build:
    # default: "_<< pipeline.git.branch >>"
    # WHEN USING A VALUE HERE,
    # YOU HAVE TO REMOVE "latest: true" IF
    # SET IN A JOB !
job_def_param: &job_def_param
  parameters:
    <<: *suffixend_def_param

filters: &filters
  filters:
    branches:
      only: master

job_options: &job_options
  context:
    - cloud-docker-hub
    - cloud-slack
  <<: *filters

environment_jahia: &environment_jahia
  environment:
    SUPER_USER_PASSWORD: jahia
    MYSQL_ROOT_PASSWORD: jahia
    DB_HOST: localhost
    DB_PASS: jahia
    PROCESSING_SERVER: "true"
    MAX_RAM_PERCENTAGE: "70"
    RESTORE_MODULE_STATES: "false"
    RESTORE_PERSISTED_CONFIGURATION: "false"

environment_db: &environment_db
  environment:
    MYSQL_ROOT_PASSWORD: jahia
    MYSQL_DATABASE: jahia
    MYSQL_USER: jahia
    MYSQL_PASSWORD: jahia

db_container: &db_container
  - image: circleci/mysql:5.7
    <<: *environment_db

jobs:
  ##########################################
  ################################## 8.0.2.0_fs
  build_8020_fs:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "8.0.2.0"
          ds_in_db: "false"
          tag_suffix: "_fs<< parameters.suffixend >>"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia8.0.2/Jahia-EnterpriseDistribution-8.0.2.0-r60910.4774.jar"
  test_8020_fs:
    <<: *job_def_param
    docker:
      - image: jahia/jahia_test:8.0.2.0_fs<< parameters.suffixend >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        <<: *environment_jahia
      - <<: *db_container
    steps:
      - test_jahia:
          jver: "8.0.2.0"
          tag_suffix: "_fs<< parameters.suffixend >>"
  publish_8020_fs:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - publish_image:
          jver: "8.0.2.0"
          tag_suffix: "_fs<< parameters.suffixend >>"
  ##########################################
  ################################## 8.0.2.0
  build_8020:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "8.0.2.0"
          tag_suffix: "<< parameters.suffixend >>"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia8.0.2/Jahia-EnterpriseDistribution-8.0.2.0-r60910.4774.jar"
  scan_latest:
    parameters:
      slack_channel:
        type: string
        default: "team-cloud-notif"
      jver:
        type: string
      <<: *suffixend_def_param
    executor: anchore/anchore_engine
    steps:
      - scan_jahia:
          jver: "<< parameters.jver >>"
          tag_suffix: "<< parameters.suffixend >>"
          registry_user: "$DOCKER_LOGIN"
          registry_pass: "$DOCKER_PASSWORD"
          slack_channel: "<< parameters.slack_channel >>"
  test_8020:
    <<: *job_def_param
    docker:
      - image: jahia/jahia_test:8.0.2.0<< parameters.suffixend >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        <<: *environment_jahia
      - <<: *db_container
    steps:
      - test_jahia:
          jver: "8.0.2.0"
          tag_suffix: "<< parameters.suffixend >>"
  publish_8020:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - publish_image:
          jver: "8.0.2.0"
          tag_suffix: "<< parameters.suffixend >>"
          latest: true  # /!\ DON'T set true if test build (see suffixend parameter)  
  ##########################################
  ################################## 8.0.1.0
  build_8010:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "8.0.1.0"
          tag_suffix: "<< parameters.suffixend >>"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia8.0.1/Jahia-EnterpriseDistribution-8.0.1.0-r60669.4716.jar"
  test_8010:
    <<: *job_def_param
    docker:
      - image: jahia/jahia_test:8.0.1.0<< parameters.suffixend >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        <<: *environment_jahia
      - <<: *db_container
    steps:
      - test_jahia:
          jver: "8.0.1.0"
          tag_suffix: "<< parameters.suffixend >>"
  publish_8010:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - publish_image:
          jver: "8.0.1.0"
          tag_suffix: "<< parameters.suffixend >>"
  ##########################################
  ################################## 8.0.0.0
  build_8000:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "8.0.0.0"
          tag_suffix: "<< parameters.suffixend >>"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia8.0.0/Jahia-EnterpriseDistribution-8.0.0.0-r60557.4681.jar"
  test_8000:
    <<: *job_def_param
    docker:
      - image: jahia/jahia_test:8.0.0.0<< parameters.suffixend >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        <<: *environment_jahia
      - <<: *db_container
    steps:
      - test_jahia:
          jver: "8.0.0.0"
          tag_suffix: "<< parameters.suffixend >>"
  publish_8000:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - publish_image:
          jver: "8.0.0.0"
          tag_suffix: "<< parameters.suffixend >>"
  ##########################################
################################## 7.3.9.0
  build_7380:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "7.3.9.0"
          xml_suffix: ""
          tag_suffix: "<< parameters.suffixend >>"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia7.3.9/Jahia-EnterpriseDistribution-7.3.9.0-r30cd73b.4903.jar"
          healthcheck_ver: "1.2.1"
  test_7380:
    <<: *job_def_param
    docker:
      - image: jahia/jahia_test:7.3.9.0<< parameters.suffixend >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        <<: *environment_jahia
      - <<: *db_container
    steps:
      - test_jahia:
          jver: "7.3.9.0"
          tag_suffix: "<< parameters.suffixend >>"
  publish_7380:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - publish_image:
          jver: "7.3.9.0"
          tag_suffix: "<< parameters.suffixend >>"
  ##########################################    
################################## 7.3.8.0
  build_7380:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "7.3.8.0"
          xml_suffix: ""
          tag_suffix: "<< parameters.suffixend >>"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia7.3.8/Jahia-EnterpriseDistribution-7.3.8.0-r2339f32.4862.jar"
          healthcheck_ver: "1.2.1"
  test_7380:
    <<: *job_def_param
    docker:
      - image: jahia/jahia_test:7.3.8.0<< parameters.suffixend >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        <<: *environment_jahia
      - <<: *db_container
    steps:
      - test_jahia:
          jver: "7.3.8.0"
          tag_suffix: "<< parameters.suffixend >>"
  publish_7380:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - publish_image:
          jver: "7.3.8.0"
          tag_suffix: "<< parameters.suffixend >>"
  ##########################################    
################################## 7.3.7.0
  build_7370:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "7.3.7.0"
          xml_suffix: ""
          tag_suffix: "<< parameters.suffixend >>"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia7.3.7/Jahia-EnterpriseDistribution-7.3.7.0-r60918.4777.jar"
          healthcheck_ver: "1.2.1"
  test_7370:
    <<: *job_def_param
    docker:
      - image: jahia/jahia_test:7.3.7.0<< parameters.suffixend >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        <<: *environment_jahia
      - <<: *db_container
    steps:
      - test_jahia:
          jver: "7.3.7.0"
          tag_suffix: "<< parameters.suffixend >>"
  publish_7370:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - publish_image:
          jver: "7.3.7.0"
          tag_suffix: "<< parameters.suffixend >>"
  ##########################################  
################################## 7.3.6.0
  build_7360:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "7.3.6.0"
          xml_suffix: ""
          tag_suffix: "<< parameters.suffixend >>"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia7.3.6/Jahia-EnterpriseDistribution-7.3.6.0-r60724.4725.jar"
          healthcheck_ver: "1.2.1"
  test_7360:
    <<: *job_def_param
    docker:
      - image: jahia/jahia_test:7.3.6.0<< parameters.suffixend >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        <<: *environment_jahia
      - <<: *db_container
    steps:
      - test_jahia:
          jver: "7.3.6.0"
          tag_suffix: "<< parameters.suffixend >>"
  publish_7360:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - publish_image:
          jver: "7.3.6.0"
          tag_suffix: "<< parameters.suffixend >>"
  ##########################################
################################## 7.3.5.1
  build_7351:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "7.3.5.1"
          xml_suffix: ""
          tag_suffix: "<< parameters.suffixend >>"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia7.3.5/Jahia-EnterpriseDistribution-7.3.5.1-r60677.4712.jar"
          healthcheck_ver: "1.2.1"
  test_7351:
    <<: *job_def_param
    docker:
      - image: jahia/jahia_test:7.3.5.1<< parameters.suffixend >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        <<: *environment_jahia
      - <<: *db_container
    steps:
      - test_jahia:
          jver: "7.3.5.1"
          tag_suffix: "<< parameters.suffixend >>"
  publish_7351:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - publish_image:
          jver: "7.3.5.1"
          tag_suffix: "<< parameters.suffixend >>"
  ##########################################
  ################################## 7.3.5.0
  build_7350:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "7.3.5.0"
          xml_suffix: ""
          tag_suffix: "<< parameters.suffixend >>"
          base_url: "https://downloads.jahia.com/downloads/jahia/jahia7.3.5/Jahia-EnterpriseDistribution-7.3.5.0-r60598.4688.jar"
          healthcheck_ver: "1.2.1"
  test_7350:
    <<: *job_def_param
    docker:
      - image: jahia/jahia_test:7.3.5.0<< parameters.suffixend >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        <<: *environment_jahia
      - <<: *db_container
    steps:
      - test_jahia:
          jver: "7.3.5.0"
          tag_suffix: "<< parameters.suffixend >>"
  publish_7350:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - publish_image:
          jver: "7.3.5.0"
          tag_suffix: "<< parameters.suffixend >>"
  ##########################################
  ################################## 7.3.4.2
  build_7342:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "7.3.4.2"
          xml_suffix: ""
          tag_suffix: "<< parameters.suffixend >>"
          base_url: "http://downloads.jahia.com/downloads/jahia/jahia7.3.4/Jahia-EnterpriseDistribution-7.3.4.2-r60675.4713.jar"
          healthcheck_ver: "1.2.1"
  test_7342:
    <<: *job_def_param
    docker:
      - image: jahia/jahia_test:7.3.4.2<< parameters.suffixend >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        <<: *environment_jahia
      - <<: *db_container
    steps:
      - test_jahia:
          jver: "7.3.4.2"
          tag_suffix: "<< parameters.suffixend >>"
  publish_7342:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - publish_image:
          jver: "7.3.4.2"
          tag_suffix: "<< parameters.suffixend >>"
  ##########################################
  ################################## 7.3.4.1
  build_7341:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - build_jahia:
          jver: "7.3.4.1"
          xml_suffix: ""
          tag_suffix: "<< parameters.suffixend >>"
          base_url: "http://downloads.jahia.com/downloads/jahia/jahia7.3.4/Jahia-EnterpriseDistribution-7.3.4.1-r60321.4663.jar"
          healthcheck_ver: "1.2.1"
  test_7341:
    <<: *job_def_param
    docker:
      - image: jahia/jahia_test:7.3.4.1<< parameters.suffixend >>
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
        <<: *environment_jahia
      - <<: *db_container
    steps:
      - test_jahia:
          jver: "7.3.4.1"
          tag_suffix: "<< parameters.suffixend >>"
  publish_7341:
    <<: *job_def_param
    executor: docker/docker
    steps:
      - publish_image:
          jver: "7.3.4.1"
          tag_suffix: "<< parameters.suffixend >>"
  ##########################################


workflows:
  version: 2
  build_all_jahia:
    jobs:
      ### Build images, push them to a private repo and test them ###
      ############# 8.0.2.0_fs
      ## build for k8s demo
      - build_8020_fs:
          <<: *job_options
      - test_8020_fs:
          requires:
            - build_8020_fs
          <<: *job_options
      ############# 8.0.2.0
      - build_8020:
          <<: *job_options
      - test_8020:
          requires:
            - build_8020
          <<: *job_options      
      ############# 8.0.1.0
      - build_8010:
          <<: *job_options
      - test_8010:
          requires:
            - build_8010
          <<: *job_options
      ############# 8.0.0.0
      - build_8000:
          <<: *job_options
      - test_8000:
          requires:
            - build_8000
          <<: *job_options
      ############# 7.3.8.0
      - build_7390:
          <<: *job_options
      - test_7390:
          requires:
            - build_7390
          <<: *job_options         
      ############# 7.3.8.0
      - build_7380:
          <<: *job_options
      - test_7380:
          requires:
            - build_7380
          <<: *job_options          
      ############# 7.3.7.0
      - build_7370:
          <<: *job_options
      - test_7370:
          requires:
            - build_7370
          <<: *job_options
      ############# 7.3.6.0
      - build_7360:
          <<: *job_options
      - test_7360:
          requires:
            - build_7360
          <<: *job_options
      ############# 7.3.5.1
      - build_7351:
          <<: *job_options
      - test_7351:
          requires:
            - build_7351
          <<: *job_options
      ############# 7.3.5.0
      - build_7350:
          <<: *job_options
      - test_7350:
          requires:
            - build_7350
          <<: *job_options
      ############# 7.3.4.2
      - build_7342:
          <<: *job_options
      - test_7342:
          requires:
            - build_7342
          <<: *job_options
      ############# 7.3.4.1
      - build_7341:
          <<: *job_options
      - test_7341:
          requires:
            - build_7341
          <<: *job_options
      ### Then we put the workflow on hold until someone gives approval ###
      - human_validation:
          type: approval
          requires:
            - test_8020_fs
            - test_8020
            - test_8010
            - test_8000
            - test_7390
            - test_7380
            - test_7370
            - test_7360
            - test_7351
            - test_7350
            - test_7342
            - test_7341
          <<: *job_options
      - slack/approval-notification:
          include_project_field: true
          message: ":female-police-officer: CircleCI requests your approval: please confirm that images are ready to be pushed in public repository..."
          requires:
            - test_8020_fs
            - test_8020
            - test_8010
            - test_8000
            - test_7390
            - test_7380
            - test_7370
            - test_7360
            - test_7351
            - test_7350
            - test_7342
            - test_7341
          <<: *job_options
      ### Push images to the public repo ###
      - publish_8020_fs:
          requires:
            - human_validation
          <<: *job_options
      - publish_8020:
          requires:
            - human_validation
          <<: *job_options      
      - publish_8010:
          requires:
            - human_validation
          <<: *job_options
      - publish_8000:
          requires:
            - human_validation
          <<: *job_options
      - publish_7390:
          requires:
            - human_validation
          <<: *job_options           
      - publish_7380:
          requires:
            - human_validation
          <<: *job_options           
      - publish_7370:
          requires:
            - human_validation
          <<: *job_options          
      - publish_7360:
          requires:
            - human_validation
          <<: *job_options
      - publish_7351:
          requires:
            - human_validation
          <<: *job_options
      - publish_7350:
          requires:
            - human_validation
          <<: *job_options
      - publish_7342:
          requires:
            - human_validation
          <<: *job_options
      - publish_7341:
          requires:
            - human_validation
          <<: *job_options
  weekly_scan:
    triggers:
      - schedule:
          cron: "0 1 * * 0"
          <<: *filters
    jobs:
      - scan_latest:
          <<: *job_options
          slack_channel: "team-cloud-security"
          jver: "8.0.2.0"
